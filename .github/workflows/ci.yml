name: Compile Resume and Release

on:
  push:
    branches:
      - main  # Adjust this to your default branch if necessary

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up TeX Live
      run: |
        sudo apt-get update
        sudo apt-get install -y texlive-full

    - name: Compile LaTeX to PDF
      run: |
        pdflatex -output-directory=./Resume ./Resume/Resume.tex
        pdflatex -output-directory=./Resume ./Resume/Resume.tex  # Run twice for references

    - name: Check if PDF was created
      run: |
        if [ ! -f ./Resume.pdf ]; then
          echo "Resume.pdf not found!"
          exit 1
        fi

    - name: Read current version
      id: read_version
      run: |
        current_version=$(cat ./Resume/VERSION.txt)
        echo "Current version is $current_version"
        echo "current_version=$current_version" >> $GITHUB_ENV

    - name: Increment version
      id: increment_version
      run: |
        IFS='.' read -r major minor patch <<< "$current_version"
        
        # Increment patch, rolling over to minor or major as needed
        if [ "$patch" -eq 9 ]; then
          patch=0
          minor=$((minor + 1))
          
          if [ "$minor" -eq 10 ]; then
            minor=0
            major=$((major + 1))
          fi
        else
          patch=$((patch + 1))
        fi
        
        new_version="$major.$minor.$patch"
        echo "New version is $new_version"
        echo "$new_version" > ./Resume/VERSION.txt
        echo "new_version=$new_version" >> $GITHUB_ENV

    - name: List files for debug
      run: ls -R  # Lists all files and directories recursively for troubleshooting


    - uses: jakob-lilliemarck/action-ez-release@v1
      with:
        tag_name: _test
        release_artifacts: Resume.pdf
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
 
    - name: Update README.md
      run: |
        version="v${{ env.new_version }}"
        if grep -q "Current Resume Version:" README.md; then
          sed -i "s/Current Resume Version: .*/Current Resume Version: $version/g" README.md
        else
          echo "Current Resume Version: $version" >> README.md
        fi

    - name: Commit and Push Changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add ./Resume/VERSION.txt README.md
        git commit -m "Update version to $version" || echo "No changes to commit"
        git push || echo "No changes to push"
