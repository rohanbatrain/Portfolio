name: Compile Resume and Release
permissions:
  contents: write  # Allow write access to repository contents
  actions: write
on:
  push:
    branches:
      - main  # Adjust this to your default branch if necessary

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Compile LaTeX to PDF using Docker
        uses: docker://registry.gitlab.com/islandoftex/images/texlive:latest
        with:
          args: |
            sh -c "pdflatex -output-directory=./Resume ./Resume/Resume.tex && \
                    pdflatex -output-directory=./Resume ./Resume/Resume.tex"  # Run twice for references
        env:
          INPUTS: ./Resume  # Provide the input directory if needed

      - name: Check if PDF was created
        run: |
          if [ ! -f ./Resume/Resume.pdf ]; then
            echo "Resume.pdf not found!"
            exit 1
          fi

      - name: Read current version
        id: read_version
        run: |
          current_version=$(cat ./Resume/VERSION.txt)
          echo "Current version is $current_version"
          echo "current_version=$current_version" >> $GITHUB_ENV

      - name: Increment version
        id: increment_version
        run: |
          IFS='.' read -r major minor patch <<< "$current_version"
          
          # Increment patch, rolling over to minor or major as needed
          if [ "$patch" -eq 9 ]; then
            patch=0
            minor=$((minor + 1))
            
            if [ "$minor" -eq 10 ]; then
              minor=0
              major=$((major + 1))
            fi
          else
            patch=$((patch + 1))
          fi
          
          new_version="$major.$minor.$patch"
          echo "New version is $new_version"
          echo "$new_version" > ./Resume/VERSION.txt
          echo "new_version=$new_version" >> $GITHUB_ENV

      - name: Update README.md
        run: |
          version="v${{ env.new_version }}"
          if grep -q "Current Resume Version:" README.md; then
            sed -i "s/Current Resume Version: .*/Current Resume Version: $version/g" README.md
          else
            echo "Current Resume Version: $version" >> README.md
          fi

      - name: Commit and Push Changes
        run: |
          version="v${{ env.new_version }}"
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add ./Resume/VERSION.txt README.md
          git commit -m "Update version to $version" 
          git push || echo "No changes to push"

      - name: Tag Release
        id: tag_release
        run: |
          git tag -a "v${{ env.new_version }}" -m "Release version ${{ env.new_version }}"
          git push origin "v${{ env.new_version }}"


      - name: Create Release
        id: create_release
        run: |
          gh release create "v${{ env.new_version }}" ./Resume/Resume.pdf --title "Resume Release v${{ env.new_version }}" --notes "Release of Resume version v${{ env.new_version }}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    outputs:
      ReleaseTag: ${{ steps.create_release.outputs.release_tag }}
