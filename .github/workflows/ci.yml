name: Compile Resume and Release

on:
  push:
    branches:
      - main  # Adjust this to your default branch if necessary

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Ensure write access to repository contents

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Setup TeX Live and compile LaTeX to PDF steps
      - name: Create temporary PDF
        run: |
          echo "This is a temporary PDF for testing." > ./Resume/Resume.pdf

      - name: Check if PDF was created
        run: |
          if [ ! -f ./Resume/Resume.pdf ]; then
            echo "Resume.pdf not found!"
            exit 1
          fi

      - name: Read current version
        id: read_version
        run: |
          current_version=$(cat ./Resume/VERSION.txt)
          echo "Current version is $current_version"
          echo "current_version=$current_version" >> $GITHUB_ENV

      - name: Increment version
        id: increment_version
        run: |
          IFS='.' read -r major minor patch <<< "$current_version"
          if [ "$patch" -eq 9 ]; then
            patch=0
            minor=$((minor + 1))
            if [ "$minor" -eq 10 ]; then
              minor=0
              major=$((major + 1))
            fi
          else
            patch=$((patch + 1))
          fi
          new_version="$major.$minor.$patch"
          echo "New version is $new_version"
          echo "$new_version" > ./Resume/VERSION.txt
          echo "new_version=$new_version" >> $GITHUB_ENV

      - name: Tag Release
        id: tag_release
        run: |
          git tag -a "v${{ env.new_version }}" -m "Release version ${{ env.new_version }}"
          git push origin "v${{ env.new_version }}"

  create-release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Ensure write access to repository contents

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create Release
        id: create_release
        uses: nickatnight/releases-action@v5
        if: startsWith(github.ref, 'refs/tags/')
        with:
          branch: "main"
          name: "Resume Release v${{ env.new_version }}"
          message: "Release of Resume version v${{ env.new_version }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Resume PDF
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}  # Correctly reference the upload URL
          asset_path: ./Resume/Resume.pdf
          asset_name: Resume-v${{ env.new_version }}.pdf  # Include version in asset name
          asset_content_type: application/pdf
